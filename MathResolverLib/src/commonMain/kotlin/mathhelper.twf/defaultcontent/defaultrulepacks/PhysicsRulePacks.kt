package mathhelper.twf.defaultcontent.defaultrulepacks

import mathhelper.twf.config.RuleITR
import mathhelper.twf.config.RulePackITR

class DefaultPhysicsRulePacks {
        companion object {
                val defaultPhysicsRulePacks = listOf(
                        RulePackITR(
                                code = "PhysicsStraightMoving",
                                nameEn = "Basics of Straight Moving", nameRu = "Основы движения по прямой",
                                descriptionShortEn = "Start formulas", descriptionShortRu = "Простейшие формулы",
                                subjectType = "physics",
                                rules = listOf(
                                        RuleITR(leftStructureString = "(s)", rightStructureString = "(/(v;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(s;t))", rightStructureString = "(v)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(t)", rightStructureString = "(/(s;v))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(s;v))", rightStructureString = "(t)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(s)", rightStructureString = "(*(v;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(v;t))", rightStructureString = "(s)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(a)", rightStructureString = "(/(v;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(v;t))", rightStructureString = "(a)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(t)", rightStructureString = "(/(v;a))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(v;a))", rightStructureString = "(t)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(v)", rightStructureString = "(*(a;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(a;t))", rightStructureString = "(v)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(s)", rightStructureString = "(/(*(a;^(t;2));2))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(a;^(t;2));2))", rightStructureString = "(s)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(a)", rightStructureString = "(/(*(2;s);^(t;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(2;s);^(t;2)))", rightStructureString = "(a)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(t)", rightStructureString = "(^(/(*(2;s);a);0.5))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(^(/(*(2;s);a);0.5))", rightStructureString = "(t)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = "")
                                )
                        ),
                        RulePackITR(
                                code = "PhysicsCircleMoving",
                                nameEn = "Basics of Circle Moving", nameRu = "Основы движения по окружности",
                                descriptionShortEn = "Start formulas", descriptionShortRu = "Простейшие формулы",
                                subjectType = "physics",
                                rules = listOf(
                                        RuleITR(leftStructureString = "(ω)", rightStructureString = "(/(*(2;π);T))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(2;π);T))", rightStructureString = "(ω)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(T)", rightStructureString = "(/(*(2;π);ω))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(2;π);ω))", rightStructureString = "(T)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),

                                        RuleITR(leftStructureString = "(ω)", rightStructureString = "(*(2;π;v))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(2;π;v))", rightStructureString = "(ω)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(v)", rightStructureString = "(/(ω;*(2;π)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(ω;*(2;π)))", rightStructureString = "(v)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),

                                        RuleITR(leftStructureString = "(ω)", rightStructureString = "(/(v;R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(v;R))", rightStructureString = "(ω)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(R)", rightStructureString = "(/(v;ω))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(v;ω))", rightStructureString = "(R)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(v)", rightStructureString = "(*(ω;R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(ω;R))", rightStructureString = "(v)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),

                                        RuleITR(leftStructureString = "(a)", rightStructureString = "(/(^(v;2);R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(^(v;2);R))", rightStructureString = "(a)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(R)", rightStructureString = "(/(^(v;2);a))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(^(v;2);a))", rightStructureString = "(R)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(v)", rightStructureString = "(^(*(a;R);/(1;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(^(*(a;R);0.5))", rightStructureString = "(v)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = "")
                                )
                        ),
                        RulePackITR(
                                code = "PhysicsMolecular",
                                nameEn = "Basics of Molecular Physics", nameRu = "Основы молекулярной физики",
                                descriptionShortEn = "Start formulas", descriptionShortRu = "Простейшие формулы",
                                subjectType = "physics",
                                rules = listOf(
                                        RuleITR(leftStructureString = "(P)", rightStructureString = "(/(F;S))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(F;S))", rightStructureString = "(P)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(S)", rightStructureString = "(/(F;P))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(F;P))", rightStructureString = "(S)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(F)", rightStructureString = "(*(P;S))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(P;S))", rightStructureString = "(F)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(m)", rightStructureString = "(/(F;a))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(F;a))", rightStructureString = "(m)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(a)", rightStructureString = "(/(F;P))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(F;m))", rightStructureString = "(a)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(F)", rightStructureString = "(*(m;a))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(m;a))", rightStructureString = "(F)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(ν)", rightStructureString = "(/(m;μ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(m;μ))", rightStructureString = "(ν)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(μ)", rightStructureString = "(/(m;ν))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(m;ν))", rightStructureString = "(μ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(m)", rightStructureString = "(*(ν;μ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(ν;μ))", rightStructureString = "(m)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(ν)", rightStructureString = "(/(N;Nₐ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(N;Nₐ))", rightStructureString = "(ν)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Nₐ)", rightStructureString = "(/(N;ν))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(N;ν))", rightStructureString = "(Nₐ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(N)", rightStructureString = "(*(ν;Nₐ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(ν;Nₐ))", rightStructureString = "(N)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(k)", rightStructureString = "(/(R;Nₐ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(R;Nₐ))", rightStructureString = "(k)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Nₐ)", rightStructureString = "(/(R;k))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(R;k))", rightStructureString = "(Nₐ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(R)", rightStructureString = "(*(k;Nₐ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(k;Nₐ))", rightStructureString = "(R)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(n)", rightStructureString = "(/(N;V))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(N;V))", rightStructureString = "(n)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(V)", rightStructureString = "(/(N;n))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(N;n))", rightStructureString = "(V)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(N)", rightStructureString = "(*(n;V))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(n;V))", rightStructureString = "(N)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(P)", rightStructureString = "(*(n;k;T))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(n;k;T))", rightStructureString = "(P)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(T)", rightStructureString = "(/(*(n;k);P))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(n;k);P))", rightStructureString = "(T)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(P;V))", rightStructureString = "(*(ν;R;T))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(ν;R;T))", rightStructureString = "(*(P;V))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(P)", rightStructureString = "(/(*(ν;R;T);V))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(ν;R;T);V))", rightStructureString = "(P)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(V)", rightStructureString = "(/(*(ν;R;T);P))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(ν;R;T);P))", rightStructureString = "(V)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(T)", rightStructureString = "(/(*(P;V);*(ν;R)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(P;V);*(ν;R)))", rightStructureString = "(T)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(*(N;/(3;2);k;T))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(N;/(3;2);k;T))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(*(/(3;2);ν;R;T))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(/(3;2);ν;R;T))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = "")
                                )
                        ),
                        RulePackITR(
                                code = "PhysicsElectrodynamics",
                                nameEn = "Basics of Electrodynamics", nameRu = "Основы электродинамики",
                                descriptionShortEn = "Start formulas", descriptionShortRu = "Простейшие формулы",
                                subjectType = "physics",
                                rules = listOf(
                                        RuleITR(leftStructureString = "(I)", rightStructureString = "(/(q;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(q;t))", rightStructureString = "(I)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(t)", rightStructureString = "(/(q;I))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(q;I))", rightStructureString = "(t)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(q)", rightStructureString = "(*(I;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(I;t))", rightStructureString = "(q)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(q)", rightStructureString = "(/(A;U))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(A;U))", rightStructureString = "(q)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(/(A;q))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(A;q))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(A)", rightStructureString = "(*(U;q))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(U;q))", rightStructureString = "(A)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(S)", rightStructureString = "(/(*(ρ;l);R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(ρ;l);R))", rightStructureString = "(S)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(R)", rightStructureString = "(/(*(ρ;l);S))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(ρ;l);S))", rightStructureString = "(R)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(l)", rightStructureString = "(/(*(S;R);ρ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(S;R);ρ))", rightStructureString = "(l)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(ρ)", rightStructureString = "(/(*(S;R);l))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(S;R);l))", rightStructureString = "(ρ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(S;R))", rightStructureString = "(*(ρ;l))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(ρ;l))", rightStructureString = "(*(S;R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(I)", rightStructureString = "(/(U;R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(U;R))", rightStructureString = "(I)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(R)", rightStructureString = "(/(U;I))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(U;I))", rightStructureString = "(R)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(*(I;R))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(I;R))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(P)", rightStructureString = "(/(A;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(A;t))", rightStructureString = "(P)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(t)", rightStructureString = "(/(A;P))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(A;P))", rightStructureString = "(t)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(A)", rightStructureString = "(*(P;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(P;t))", rightStructureString = "(A)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(/(P;I))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(P;I))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(I)", rightStructureString = "(/(P;U))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(P;U))", rightStructureString = "(I)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(P)", rightStructureString = "(*(I;U))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(I;U))", rightStructureString = "(P)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Q)", rightStructureString = "(A)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(A)", rightStructureString = "(Q)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(P)", rightStructureString = "(/(Q;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Q;t))", rightStructureString = "(P)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(t)", rightStructureString = "(/(Q;P))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Q;P))", rightStructureString = "(t)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Q)", rightStructureString = "(*(P;t))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(P;t))", rightStructureString = "(Q)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(C)", rightStructureString = "(/(q;U))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(q;U))", rightStructureString = "(C)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(/(q;C))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(q;C))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(q)", rightStructureString = "(*(U;C))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(U;C))", rightStructureString = "(q)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(W)", rightStructureString = "(/(*(C;^(U;2));2))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(C;^(U;2));2))", rightStructureString = "(W)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(C)", rightStructureString = "(/(*(2;W);^(U;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(2;W);^(U;2)))", rightStructureString = "(C)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(W)", rightStructureString = "(/(*(L;^(I;2));2))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(L;^(I;2));2))", rightStructureString = "(W)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(L)", rightStructureString = "(/(*(2;W);^(I;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(*(2;W);^(I;2)))", rightStructureString = "(L)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(I)", rightStructureString = "(/(Ψ;L))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Ψ;L))", rightStructureString = "(I)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(L)", rightStructureString = "(/(Ψ;I))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Ψ;I))", rightStructureString = "(L)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Ψ)", rightStructureString = "(*(I;L))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(I;L))", rightStructureString = "(Ψ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(I)", rightStructureString = "(/(Fₐ;*(B;l;sin(φ))))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Fₐ;*(B;l;sin(φ))))", rightStructureString = "(I)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(B)", rightStructureString = "(/(Fₐ;*(I;l;sin(φ))))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Fₐ;*(I;l;sin(φ))))", rightStructureString = "(B)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(l)", rightStructureString = "(/(Fₐ;*(B;I;sin(φ))))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Fₐ;*(B;I;sin(φ))))", rightStructureString = "(l)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Fₐ)", rightStructureString = "(*(I;B;l;sin(φ)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(I;B;l;sin(φ)))", rightStructureString = "(Fₐ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(B)", rightStructureString = "(/(Ψ;*(S;cos(φ))))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Ψ;*(S;cos(φ))))", rightStructureString = "(B)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(S)", rightStructureString = "(/(Ψ;*(B;cos(φ))))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(Ψ;*(B;cos(φ))))", rightStructureString = "(S)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(Ψ)", rightStructureString = "(*(B;S;cos(φ)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(B;S;cos(φ)))", rightStructureString = "(Ψ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(E)", rightStructureString = "(/(F;q))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(F;q))", rightStructureString = "(E)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(q)", rightStructureString = "(/(F;E))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(F;E))", rightStructureString = "(q)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(F)", rightStructureString = "(*(E;q))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(E;q))", rightStructureString = "(F)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(d)", rightStructureString = "(/(U;E))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(U;E))", rightStructureString = "(d)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(E)", rightStructureString = "(/(U;d))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(U;d))", rightStructureString = "(E)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(U)", rightStructureString = "(*(E;d))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(E;d))", rightStructureString = "(U)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = "")
                                )
                        ),
                        RulePackITR(
                                code = "PhysicsNuclear",
                                nameEn = "Basics of Nuclear Physics", nameRu = "Основы ядерной физики",
                                descriptionShortEn = "Start formulas", descriptionShortRu = "Простейшие формулы",
                                subjectType = "physics",
                                rules = listOf(
                                        RuleITR(leftStructureString = "(m)", rightStructureString = "(/(E;^(c;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(E;^(c;2)))", rightStructureString = "(m)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(c)", rightStructureString = "(^(/(E;m);/(1;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(^(/(E;m);0.5))", rightStructureString = "(c)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(E)", rightStructureString = "(*(m;^(c;2)))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(m;^(c;2)))", rightStructureString = "(E)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),

                                        RuleITR(leftStructureString = "(h)", rightStructureString = "(/(E;ν))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(E;ν))", rightStructureString = "(h)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(ν)", rightStructureString = "(/(E;h))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(E;h))", rightStructureString = "(ν)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(E)", rightStructureString = "(*(h;ν))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(h;ν))", rightStructureString = "(E)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),

                                        RuleITR(leftStructureString = "(λ)", rightStructureString = "(/(c;ν))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(c;ν))", rightStructureString = "(λ)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(ν)", rightStructureString = "(/(c;λ))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(c;λ))", rightStructureString = "(ν)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(c)", rightStructureString = "(*(λ;ν))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(λ;ν))", rightStructureString = "(c)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),

                                        RuleITR(leftStructureString = "(c)", rightStructureString = "(/(p;m))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(p;m))", rightStructureString = "(c)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(m)", rightStructureString = "(/(p;c))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(/(p;c))", rightStructureString = "(m)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(p)", rightStructureString = "(*(m;c))", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = ""),
                                        RuleITR(leftStructureString = "(*(m;c))", rightStructureString = "(p)", basedOnTaskContext = true, matchJumbledAndNested = true, simpleAdditional = false, isExtending = false, priority = 35, code = "")
                                )
                        )
                )

                fun get() = defaultPhysicsRulePacks
        }
}
